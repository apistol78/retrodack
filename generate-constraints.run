import(traktor)

run:loadScript("CSV.run")

function main()

	local FILES =
	{
		"pin-clock.csv",
		"pin-lcd.csv",
		"pin-uart.csv",
		"pin-i2c.csv",
		"pin-sd.csv",
		-- "pin-usb-hci.csv",
		"pin-sdram.csv",
	}

	local po < const > = CSV.load("docs/pinout.csv")

	stdout:printLn("// Autogenerated, DO NOT EDIT!")
	stdout:printLn("")

	for _, f in ipairs(FILES) do
		local csv = CSV.load("docs/" .. f)
		for _, r in pairs(csv.rows) do
			local fpga = csv:getValue(r, "FPGA")
			local name = csv:getValue(r, "Signal")
			local designator = csv:getValue(r, "Designator")
			local freq = csv:getValue(r, "Frequency")

			-- Do some sanity cross checks.
			local rr = po:find("Designator", function(v) return v == designator end)
			if rr == nil then
				stderr:printLn("No such designator in pinout " .. designator)
				return 1
			end
			if po:getValue(rr, "SODIMM") ~= "" and po:getValue(rr, "FPGA") ~= fpga then
				stderr:printLn("Invalid SODIMM signal " .. fpga .. " != " .. po:getValue(rr, "FPGA"))
				return 1
			end

			stdout:printLn("// Designator " .. designator)
			stdout:printLn("LOCATE COMP \"" .. name .. "\" SITE \"" .. fpga .. "\";")
			stdout:printLn("IOBUF PORT \"" .. name .. "\" IO_TYPE=LVCMOS25;")

			if freq ~= nil then
				stdout:printLn("FREQUENCY PORT \"" .. name .. "\" " .. freq .. " MHZ;")
			end

			stdout:printLn("")
		end
	end
end
